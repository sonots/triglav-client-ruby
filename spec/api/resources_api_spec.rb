=begin
#Triglav

#Triglav API Reference.

OpenAPI spec version: 1.0

Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require 'spec_helper'
require 'json'

# Unit tests for TriglavClientBase::ResourcesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ResourcesApi' do
  before do
    # run before each test
    @instance = TriglavClientBase::ResourcesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ResourcesApi' do
    it 'should create an instact of ResourcesApi' do
      expect(@instance).to be_instance_of(TriglavClientBase::ResourcesApi)
    end
  end

  # unit tests for api_v1_resources_create
  # Creates a Resource
  # 
  # @param uri Resource URI
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description Description
  # @option opts [Integer] :cluster_id Cluster Id
  # @option opts [BOOLEAN] :consumable Consumable or not
  # @option opts [BOOLEAN] :notifiable Notifiable or not
  # @return [nil]
  describe 'api_v1_resources_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_resources_destroy
  # Deletes an existing Resource
  # 
  # @param id_or_uri Resource Id or URI
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_v1_resources_destroy test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_resources_index
  # Fetches resources
  # Query and fetch resources
  # @param cluster_id Cluster Id
  # @param consumable Consumable or not
  # @param notifiable Notifiable or not
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_v1_resources_index test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_resources_show
  # Fetches a single Resource
  # 
  # @param id_or_uri Resource Id or URI
  # @param [Hash] opts the optional parameters
  # @return [Resource]
  describe 'api_v1_resources_show test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_v1_resources_update
  # Updates a Resource
  # 
  # @param id_or_uri Resource Id or URI
  # @param uri Resource URI
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description Description
  # @option opts [Integer] :cluster_id Cluster Id
  # @option opts [BOOLEAN] :consumable Consumable or not
  # @option opts [BOOLEAN] :notifiable Notifiable or not
  # @return [nil]
  describe 'api_v1_resources_update test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
